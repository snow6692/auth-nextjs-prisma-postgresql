generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  completed Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  family    Family  @relation(fields: [familyId], references: [id])
  familyId  String
  points    Int     @default(10)
}

enum UserRole {
  USER
  ADMIN
}

model Family {
  id        String   @id @default(uuid())
  name      String
  users     User[]
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  accounts      Account[]
  tasks         Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  family    Family?  @relation(fields: [familyId], references: [id])
  familyId  String?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}
